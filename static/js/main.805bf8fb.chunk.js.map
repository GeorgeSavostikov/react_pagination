{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","paginationNumbers","count","result","i","push","paginationsCount","firstPage","lastPage","length","className","cn","disabled","href","onClick","map","pagination","active","items","from","to","numbers","n","getNumbers","App","useState","setPerPage","setCurrentPage","firstIndex","lastIndex","elementsPerPage","slice","id","onChange","event","parseInt","target","value","selected","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"oNAoBO,IAAMA,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAjBR,SAA0BJ,EAAeC,GAIvC,IAHA,IAAMI,EAAQL,EAAQC,EAChBK,EAAS,GAENC,EAAI,EAAGA,EAAIF,EAAOE,GAAK,EAC9BD,EAAOE,KAAKD,EAAI,GAGlB,OAAOD,EASmBG,CAAiBT,EAAOC,GAC5CS,EAAYN,EAAkB,GAC9BO,EAAWP,EAAkBA,EAAkBQ,OAAS,GAE9D,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAAUb,IAAgBQ,IAD5B,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAed,IAAgBQ,EAC/BO,QAAS,WACHf,IAAgBQ,GAClBP,EAAaD,EAAc,IAPjC,oBAeDE,EAAkBc,KAAK,SAACC,GAAD,OACtB,oBACEN,UAAWC,IAAG,YAAa,CACzBM,OAAQD,IAAejB,IAF3B,SAKE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMd,EAAagB,IAJ9B,mBAMMA,UAKV,oBAAIN,UAAWC,IAAG,YAAa,CAC7BC,SAAUb,IAAgBS,IAD5B,SAIE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAed,IAAgBS,EAC/BM,QAAS,WACHf,IAAgBS,GAClBR,EAAaD,EAAc,IAPjC,wBClEFmB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQhB,KAAKiB,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBR,KAAI,SAAAO,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO3B,EAAP,KAAgB4B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO1B,EAAP,KAAoB4B,EAApB,KAOA,IAAMC,GAAc7B,EAAc,GAAKD,EACjC+B,EAAYD,EAAa9B,EAEzBgC,EAAkBZ,EAAMa,MAAMH,EAAYC,GAEhD,OACE,sBAAKnB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACiC6B,EAAa,EAD9C,cACqDA,EAAaE,EAAgBrB,OADlF,eAC+FS,EAAMT,OADrG,OAIA,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,SAxBV,SAAsBC,GACpBP,EAAe,GACfD,EAAWS,SAASD,EAAME,OAAOC,MAAO,MAkBlC,UAME,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAIC,UAAQ,EAA1B,eACA,wBAAQD,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEb,MAAOqB,EAAMT,OACbX,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACwC,GAAD,OAAUb,EAAea,MAGzC,6BACGV,EAAgBf,KAAI,SAAC0B,GAAD,OACnB,oBAAI,UAAQ,OAAZ,mBAAkCA,IAAVA,YE1DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.805bf8fb.chunk.js","sourcesContent":["import cn from 'classnames';\n\ntype PaginationProps = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nfunction paginationsCount(total: number, perPage: number): number[] {\n  const count = total / perPage;\n  const result = [];\n\n  for (let i = 0; i < count; i += 1) {\n    result.push(i + 1);\n  }\n\n  return result;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const paginationNumbers = paginationsCount(total, perPage);\n  const firstPage = paginationNumbers[0];\n  const lastPage = paginationNumbers[paginationNumbers.length - 1];\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: currentPage === firstPage,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === firstPage}\n          onClick={() => {\n            if (currentPage !== firstPage) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {paginationNumbers.map(((pagination: number) => (\n        <li\n          className={cn('page-item', {\n            active: pagination === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pagination}`}\n            onClick={() => onPageChange(pagination)}\n          >\n            {`${pagination}`}\n          </a>\n        </li>\n      )))}\n\n      <li className={cn('page-item', {\n        disabled: currentPage === lastPage,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === lastPage}\n          onClick={() => {\n            if (currentPage !== lastPage) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  function handleChnage(event: ChangeEvent<HTMLSelectElement>) {\n    setCurrentPage(1);\n    setPerPage(parseInt(event.target.value, 10));\n  }\n\n  const firstIndex = (currentPage - 1) * perPage;\n  const lastIndex = firstIndex + perPage;\n\n  const elementsPerPage = items.slice(firstIndex, lastIndex);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstIndex + 1} - ${firstIndex + elementsPerPage.length} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleChnage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\" selected>5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n\n      <ul>\n        {elementsPerPage.map((item) => (\n          <li data-cy=\"item\" key={item}>{`${item}`}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}